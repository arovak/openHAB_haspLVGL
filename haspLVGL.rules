/* -------------------------------------- BEGIN USER CONFIG -------------------------------------- */
// step
/* Configuration for the three page selection buttons at the bottom of the page */
val btn_p254_bg_color        = '#104042'        // Set page # for bottom left button
val btn_p254_border_color    = '#236467' // Set page title for bottom left button
val btn_p254_text_color      = '#6BC2C6'
val btn_p254_Radius          = 0

val p254_b1_txt         = '\\uf637'//'Lights'
val p254_b2_txt         = '\\uf129'//'Status'
val p254_b3_txt         = '\\uf039'//''
val p254_b4_txt         = '\\uf61f'//'Scenes'

/* Configuration for page 0 (Lights) */
val page_bg_color       = '#4F5059'
val btn_bg_color        = '#161828'        // Set page # for bottom left button
val btn_border_color    = '#333A71' // Set page title for bottom left button
val btn_text_color      = '#ABB2E8'//'#727DD3'
val btn_Radius          = 5

val p0_b1_txt           = '\\uf0eb Living Top'//'\\uf525 Demo 1'//
val p0_b2_txt           = '\\uf0eb Living Table'//'\\uf528 Demo 2'//
val p0_b3_txt           = '\\uf0eb Kitchen Led'//'\\uf527 Demo 3'//
val p0_b4_txt           = '\\uf61f Demo page'//'\\uf0eb Hallway'

// /* -------------------------------------- END USER CONFIG -------------------------------------- */

var Timer Brightness_Timer = null

// /* -------------------------------------- BEGIN USER-DEFINED HANDLER RULES -------------------------------------- */

// // HASP -> openHAB item handling rules

// /* 
// Use the rules below to add automation logic in your system, based on inputs from the HASP.
// There is an if statement for every button and dimmer on the HASP pages, and you just need to add your setup's items
// to the proper if statement, to use that button to control the item.
// Several examples are included (commented out) to get you started, whether you just want to send an ON command when the 
// button is pressed, or toggle the output item depending on its current state.
// */

rule "Setup HASP LVGL System Variables"
when
    Item HASP_Plate35_Plate_Status changed to "ON" or
    Item HASP_Plate35_Plate_Refresh received command ON
then
    val Number LCD_Height   = HASP_Plate35_Plate_Sensor_TFTHeight.state //320
    val Number LCD_Width    = HASP_Plate35_Plate_Sensor_TFTWidth.state //240
    val Number LCD_Rows     = 5
    val Number LCD_Spacing  = 3
    val Number ITM_Height   = (LCD_Height - (LCD_Spacing * (LCD_Rows + 1))) / LCD_Rows
    val Number ITM1_Width   = LCD_Width - (LCD_Spacing * 2)
    val Number ITM2_Width   = (LCD_Width - (LCD_Spacing * 4))/3


    var String jsonlString
    /* Send the inital layout for Page 0*/
    jsonlString =   '{' +
                        '\"objid\":10,' +
                        '\"id\":1,' +
                        '\"page\":0,' +
                        '\"vis\":0,' +
                        '\"x\":' + LCD_Spacing.toString + ',' +
                        '\"y\":' + LCD_Spacing.toString + ',' +
                        '\"w\":' + ITM1_Width.intValue.toString + ',' +
                        '\"h\":' + ITM_Height.intValue.toString + ',' +
                        '\"txt\":\"' + p0_b1_txt + '\"' +
                    '}' +
                    '{' +
                        '\"objid\":10,' +
                        '\"id\":2,' +
                        '\"page\":0,' +
                        '\"vis\":0,' +
                        '\"x\":' + LCD_Spacing.toString + ',' +
                        '\"y\":' + ((ITM_Height * 1) + (LCD_Spacing * 2)).intValue.toString + ',' +
                        '\"w\":' + ITM1_Width.intValue.toString + ',' +
                        '\"h\":' + ITM_Height.intValue.toString + ',' +
                        '\"txt\":\"' + p0_b2_txt + '\"' +
                    '}' +
                    '{' +
                        '\"objid\":10,' +
                        '\"id\":3,' +
                        '\"page\":0,' +
                        '\"vis\":0,' +
                        '\"x\":' + LCD_Spacing.toString + ',' +
                        '\"y\":' + ((ITM_Height * 2) + (LCD_Spacing * 3)).intValue.toString + ',' +
                        '\"w\":' + ITM1_Width.intValue.toString + ',' +
                        '\"h\":' + ITM_Height.intValue.toString + ',' +
                        '\"txt\":\"' + p0_b3_txt + '\"' +
                    '}' +
                    '{' +
                        '\"objid\":10,' +
                        '\"id\":4,' +
                        '\"page\":0,' +
                        '\"vis\":0,' +
                        '\"x\":' + LCD_Spacing.toString + ',' +
                        '\"y\":' + ((ITM_Height * 3) + (LCD_Spacing * 4)).intValue.toString + ',' +
                        '\"w\":' + ITM1_Width.intValue.toString + ',' +
                        '\"h\":' + ITM_Height.intValue.toString + ',' +
                        '\"txt\":\"' + p0_b4_txt + '\"' +
                    '}' +
                    '{' +
                        '\"objid\":10,' +
                        '\"id\":1,' +
                        '\"page\":254,' +
                        '\"vis\":0,' +
                        '\"x\":' + LCD_Spacing.toString + ',' +
                        '\"y\":' + ((ITM_Height * 4) + (LCD_Spacing * 5)).intValue.toString + ',' +
                        '\"w\":' + ITM2_Width.intValue.toString + ',' +
                        '\"h\":' + ITM_Height.intValue.toString + ',' +
                        '\"txt\":\"' + p254_b1_txt + '\"' +
                    '}' +
                    '{' +
                        '\"objid\":10,' +
                        '\"id\":2,' +
                        '\"page\":254,' +
                        '\"vis\":0,' +
                        '\"x\":' + ((LCD_Spacing * 2) + ITM2_Width).intValue.toString + ',' +
                        '\"y\":' + ((ITM_Height * 4) + (LCD_Spacing * 5)).intValue.toString + ',' +
                        '\"w\":' + ITM2_Width.intValue.toString + ',' +
                        '\"h\":' + ITM_Height.intValue.toString + ',' +
                        '\"txt\":\"' + p254_b2_txt + '\"' +
                    '}' +
                    '{' +
                        '\"objid\":10,' +
                        '\"id\":3,' +
                        '\"page\":254,' +
                        '\"vis\":0,' +
                        '\"x\":' + ((LCD_Spacing * 3) + (ITM2_Width * 2)).intValue.toString + ',' +
                        '\"y\":' + ((ITM_Height * 4) + (LCD_Spacing * 5)).intValue.toString + ',' +
                        '\"w\":' + ITM2_Width.intValue.toString + ',' +
                        '\"h\":' + ITM_Height.intValue.toString + ',' +
                        '\"txt\":\"' + p254_b3_txt + '\"' +
                    '}'

    logInfo("HASP_JSONL", jsonlString)
    HASP_Plate35_Plate_Command_JSONL.sendCommand(jsonlString)

    /* Send the inital layout for Page 1*/
    jsonlString =   '{' +
                        '\"objid\":12,' +
                        '\"id\":1,' +
                        '\"page\":1,' +
                        '\"vis\":0,' +
                        '\"x\":' + LCD_Spacing.toString + ',' +
                        '\"x\":' + LCD_Spacing.toString + ',' +
                        '\"w\":' + ITM1_Width.toString + ',' +
                        '\"h\":' + ITM_Height.toString + ',' +
                        '\"txt\":\"\\uf1eb  ' + HASP_Plate35_Plate_Sensor_SignalStrength.state.toString + '   ' + HASP_Plate35_Plate_Sensor_HaspIP.state + '\"' +
                    '}' +
                    '{' +
                        '\"objid\":12,' +
                        '\"id\":2,' +
                        '\"page\":1,' +
                        '\"vis\":0,' +
                        '\"x\":' + LCD_Spacing.toString + ',' +
                        '\"y\":' + (ITM_Height / 2).intValue.toString + ',' +
                        '\"w\":' + ITM1_Width.toString + ',' +
                        '\"h\":' + ITM_Height.toString + ',' +
                        '\"txt\":\"Brightness/Color\"' +
                    '}' +
                    '{' +
                        '\"objid\":30,' +
                        '\"id\":3,' +
                        '\"page\":1,' +
                        '\"vis\":0,' +
                        '\"x\":' + (LCD_Spacing * 6).intValue.toString + ',' +
                        '\"y\":' + (ITM_Height + (LCD_Spacing * 4)).intValue.toString + ',' +
                        '\"w\":' + (ITM_Height / 2).intValue.toString + ',' +
                        '\"h\":' + (LCD_Height - (ITM_Height * 3)).intValue.toString + ',' +
                        '\"val\":' + HASP_Plate35_Light_Brightness.state.toString +
                    '}' +
                    '{' +
                        '\"objid\":20,' +
                        '\"id\":4,' +
                        '\"page\":1,' +
                        '\"vis\":0,' +
                        '\"x\":' + ITM_Height.toString + ',' +
                        '\"y\":' + ITM_Height.toString + ',' +
                        '\"w\":' + (LCD_Width - (LCD_Spacing * 4) - ITM_Height).intValue.toString + ',' +
                        '\"h\":' + (LCD_Width - (LCD_Spacing * 4) - ITM_Height).intValue.toString +
                    '}'
    logInfo("HASP_JSONL", jsonlString)
    HASP_Plate35_Plate_Command_JSONL.sendCommand(jsonlString)


    /* Send the style settings for page 0 objects*/
    var String jsonString
    jsonString = '[\''+
                    'p[0].b[0].bg_color='     + page_bg_color.toString    +
                '\']'
    HASP_Plate35_Plate_Command_JSON.sendCommand(jsonString)

    jsonString = '[\''+
                    'p[0].b[1].bg_color='     + btn_bg_color.toString     + '\',\'' +
                    'p[0].b[1].text_color='   + btn_text_color.toString   + '\',\'' +
                    'p[0].b[1].border_color=' + btn_border_color.toString + '\',\'' +
                    'p[0].b[1].radius='       + btn_Radius.toString       + '\',\'' +
                    'p[0].b[1].vis=1'         +
                '\']'
    HASP_Plate35_Plate_Command_JSON.sendCommand(jsonString)

    jsonString = '[\''+
                    'p[0].b[2].bg_color='     + btn_bg_color.toString     + '\',\'' +
                    'p[0].b[2].text_color='   + btn_text_color.toString   + '\',\'' +
                    'p[0].b[2].border_color=' + btn_border_color.toString + '\',\'' +
                    'p[0].b[2].radius='       + btn_Radius.toString       + '\',\'' +
                    'p[0].b[2].vis=1'         +
                '\']'
    HASP_Plate35_Plate_Command_JSON.sendCommand(jsonString)

    jsonString = '[\''+
                    'p[0].b[3].bg_color='     + btn_bg_color.toString     + '\',\'' +
                    'p[0].b[3].text_color='   + btn_text_color.toString   + '\',\'' +
                    'p[0].b[3].border_color=' + btn_border_color.toString + '\',\'' +
                    'p[0].b[3].radius='       + btn_Radius.toString       + '\',\'' +
                    'p[0].b[3].vis=1'         +
                '\']'
    HASP_Plate35_Plate_Command_JSON.sendCommand(jsonString)

    jsonString = '[\''+
                    'p[0].b[4].bg_color='     + btn_bg_color.toString     + '\',\'' +
                    'p[0].b[4].text_color='   + btn_text_color.toString   + '\',\'' +
                    'p[0].b[4].border_color=' + btn_border_color.toString + '\',\'' +
                    'p[0].b[4].radius='       + btn_Radius.toString       + '\',\'' +
                    'p[0].b[4].vis=1'         +
                '\']'
    HASP_Plate35_Plate_Command_JSON.sendCommand(jsonString)

    /* Send the style settings for page 1 objects*/
    var i = 0
    var page_objects = 4
    while ((i=i+1) <= page_objects) {
        jsonString = '[\''+
                'p[1].b[' + i + '].vis=1'         +
            '\']'
        HASP_Plate35_Plate_Command_JSON.sendCommand(jsonString)
    }


    /* Send the style settings for page 254 objects*/
    i = 0
    var page_btns = 3
    while ((i=i+1) <= page_btns) {
        jsonString = '[\''+
                'p[254].b[' + i + '].bg_color='     + btn_p254_bg_color.toString     + '\',\'' +
                'p[254].b[' + i + '].text_color='   + btn_p254_text_color.toString   + '\',\'' +
                'p[254].b[' + i + '].border_color=' + btn_p254_border_color.toString + '\',\'' +
                'p[254].b[' + i + '].radius='       + btn_p254_Radius.toString       + '\',\'' +
                'p[254].b[' + i + '].toggle=true\',\'' +
                'p[254].b[' + i + '].vis=1'         +
            '\']'
        HASP_Plate35_Plate_Command_JSON.sendCommand(jsonString)
    }
end

rule "Handle HASP LVGL Master"
when
   Item HASP_Plate35_Plate_State_JSON_Value received update
    // Item HASP_Plate35_Plate_State_JSON_Value changed
then
    //parse out data from JSON string (page, button, value)
    var String eventpage = HASP_Plate35_Plate_State_JSON_Event.state.toString.split("\\[").get(1).split("\\]").get(0)
    var String eventbutton = HASP_Plate35_Plate_State_JSON_Event.state.toString.split("\\[").get(2).split("\\]").get(0)
    var String eventproperty = HASP_Plate35_Plate_State_JSON_Event.state.toString.split("\\.").get(2).split('\\"').get(0)

    logInfo("HASP_LVGL", "p[" + eventpage + "].b[" + eventbutton + "].property[" + eventproperty + "]")

    if (HASP_Plate35_Plate_State_JSON_Value.state == 'UP')
    {
        //Do nothing (button release event)
        logInfo ("HASP_LVGL", "Ignoring UP event")
    }
    else
    {
        //Handle Page/button/dimmer value event
        if(eventpage == '254')
        {
            // if(eventproperty == 'val')
            // {
                logInfo ("HASP_LVGL", "page change")
                HASP_Plate35_Page.sendCommand(Integer::parseInt(eventbutton)-1)      // Substract 1 because pages start at 0 and objects start at 1
            // }
        }
        else if(eventpage == '0')
        {
            switch(eventbutton)
            {
                case '1':
                {
                    logInfo ("HASP_LVGL", "Page " + eventpage + " button " + eventbutton + " pressed")
                    // do some things here
                }
                case '2':
                {
                    logInfo ("HASP_LVGL", "Page " + eventpage + " button " + eventbutton + " pressed")
                    // do some things here
                }
                case '3':
                {
                    logInfo ("HASP_LVGL", "Page " + eventpage + " button " + eventbutton + " pressed")
                    // do some things here
                }
                case '4':
                {
                    logInfo ("HASP_LVGL", "Page " + eventpage + " button " + eventbutton + " pressed")
                    // do some things here
                    if (HASP_Plate35_Plate_State_JSON_Value.state == 'SHORT')
                    {
                        val Number LCD_Height   = HASP_Plate35_Plate_Sensor_TFTHeight.state //320
                        val Number LCD_Width    = HASP_Plate35_Plate_Sensor_TFTWidth.state //240
                        val Number LCD_Rows     = 5
                        val Number LCD_Spacing  = 10
                        val Number ITM1_Width   = LCD_Width - (LCD_Spacing * 2)


                        var jsonString = '[\'clearpage=0\']' 
                        HASP_Plate35_Plate_Command_JSON.sendCommand(jsonString)

                        var String jsonlString
                        jsonlString =   '{' +
                            '\"objid\":51,' +   //ROLLER
                            '\"id\":5,' +
                            '\"page\":0,' +
                            '\"vis\":1,' +
                            '\"x\":' + LCD_Spacing.toString + ',' +
                            '\"y\":' + LCD_Spacing.toString + ',' +
                            '\"w\":' + (ITM1_Width / 2 ).intValue.toString + ',' +
                            '\"rows\":3,' +
                            '\"options\":\"Item 1\\nItem 2\\nItem 3\\nItem 4\\nItem 5\\nItem 6\"' +
                        '}' +
                        '{' +
                            '\"objid\":50,' +   //LIST
                            '\"id\":6,' +
                            '\"page\":0,' +
                            '\"vis\":1,' +
                            '\"x\":' + (LCD_Spacing + (ITM1_Width / 2 )).toString + ',' +
                            '\"y\":' + LCD_Spacing.toString + ',' +
                            '\"w\":' + (ITM1_Width / 2 ).intValue.toString + ',' +
                            '\"rows\":3,' +
                            '\"options\":\"Item 1\\nItem 2\\nItem 3\\nItem 4\\nItem 5\\nItem 6\"' +
                        '}' +
                        '{' +
                            '\"objid\":11,' +   //CHECKBOX
                            '\"id\":7,' +
                            '\"page\":0,' +
                            '\"vis\":1,' +
                            '\"x\":' + LCD_Spacing.toString + ',' +
                            '\"y\":' + ((LCD_Height / 8) * 2).intValue.toString + ',' +
                            '\"w\":' + ITM1_Width.intValue.toString + ',' +
                            '\"h\":' + (LCD_Height / 8).intValue.toString + ',' +
                            '\"txt\":\"A Checkbox Object\"' +
                        '}' +
                        '{' +
                            '\"objid\":40,' +   //SWITCH
                            '\"id\":8,' +
                            '\"page\":0,' +
                            '\"vis\":1,' +
                            '\"x\":' + LCD_Spacing.toString + ',' +
                            '\"y\":' + ((LCD_Height / 8) * 3).intValue.toString + ',' +
                            '\"w\":' + (ITM1_Width / 3).intValue.toString + ',' +
                            '\"h\":' + (LCD_Height / 8).intValue.toString + ',' +
                            '\"val\":0' +
                        '}' +
                        '{' +
                            '\"objid\":41,' +   //LED
                            '\"id\":9,' +
                            '\"page\":0,' +
                            '\"vis\":1,' +
                            '\"x\":' + LCD_Spacing.toString + ',' +
                            '\"y\":' + ((LCD_Height / 8) * 4 + LCD_Spacing).intValue.toString + ',' +
                            '\"w\":' + (LCD_Height / 8).intValue.toString + ',' +
                            '\"h\":' + (LCD_Height / 8).intValue.toString + ',' +
                            '\"val\":255' +
                        '}' +
                        '{' +
                            '\"objid\":31,' +   //GAUGE
                            '\"id\":10,' +
                            '\"page\":0,' +
                            '\"vis\":1,' +
                            '\"x\":' + (LCD_Width - (LCD_Spacing * 2) - (ITM1_Width / 2)).intValue.toString + ',' +
                            '\"y\":' + ((LCD_Height / 8) * 3 - LCD_Spacing).intValue.toString + ',' +
                            '\"w\":' + (LCD_Width / 2 ).intValue.toString + ',' +
                            '\"h\":' + (LCD_Width / 2 ).intValue.toString + ',' +
                            '\"val\":75' +
                        '}' +
                        '{' +
                            '\"objid\":32,' +   //PROGRESSBAR
                            '\"id\":11,' +
                            '\"page\":0,' +
                            '\"vis\":1,' +
                            '\"x\":' + LCD_Spacing.toString + ',' +
                            '\"y\":' + ((LCD_Height / 8) * 5.6).intValue.toString + ',' +
                            '\"w\":' + ITM1_Width.intValue.toString + ',' +
                            '\"h\":' + (LCD_Height / 12).intValue.toString + ',' +
                            '\"val\":75' +
                        '}'

                        HASP_Plate35_Plate_Command_JSONL.sendCommand(jsonlString)
                    }

                }
                case '8':
                {
                    logInfo ("HASP_LVGL", "Page " + eventpage + " button " + eventbutton + " pressed")
                    /* Send the style settings for page 254 objects*/
                    var i = 0
                    var steps = 10
                    var String jsonString
                    while ((i=i+1) <= steps) {
                        jsonString = '[\''+
                                'p[0].b[9].val='     + ((255 / steps) * i)    + '\',\'' +
                                'p[0].b[10].val='     + ((100 / steps) * i)    + '\',\'' +
                                'p[0].b[11].val='     + ((100 / steps) * i)    + '\',\'' +
                                // 'p[254].b[10].val='  + ((100 / steps) * i).intValue.toString    + '\',\'' +
                            '\']'
                        HASP_Plate35_Plate_Command_JSON.sendCommand(jsonString)
                    }
                }                

            }
        }
        else if(eventpage == '1')
        {
            switch(eventbutton)
            {
                case '1':
                {
                    logInfo ("HASP_LVGL", "Page " + eventpage + " button " + eventbutton + " pressed")
                    // do some things here
                }
                case '2':
                {
                    logInfo ("HASP_LVGL", "Page " + eventpage + " button " + eventbutton + " pressed")
                    // do some things here
                }
                case '3':
                {
                    logInfo ("HASP_LVGL", "Page " + eventpage + " button " + eventbutton + " pressed")
                    HASP_Plate35_Light_Dimmer.sendCommand(Integer::parseInt(HASP_Plate35_Plate_State_JSON_Value.state.toString))
                }
                case '4':
                {
                    logInfo ("HASP_LVGL", "Page " + eventpage + " button " + eventbutton + " pressed")
                    // do some things here
                    var String jsonString
                    if (eventproperty == 'val')
                    {
                        var Number colorValue = Integer::parseInt(HASP_Plate35_Plate_State_JSON_Value.state.toString)/(-1000)
                        jsonString = '[\''+
                                        'p[1].b[0].bg_color='     + colorValue.intValue.toString    +
                                    '\']'
                        HASP_Plate35_Plate_Command_JSON.sendCommand(jsonString)
                    }
                    if (eventproperty == 'color')
                    {
                        jsonString = '[\''+
                                        'p[1].b[0].bg_color='     + HASP_Plate35_Plate_State_JSON_Value.state.toString    +
                                    '\']'
                        HASP_Plate35_Plate_Command_JSON.sendCommand(jsonString)
                    }

                }

            }
        }

    //     else
    //     {   
    //         if ((eventbutton == '1' || eventbutton == '2' || eventbutton == '3') && eventpage != '0') //Handle the pressing of one of the 3 bottom page buttons
    //         {
    //             switch(eventbutton)
    //             {
    //                 case '1':
    //                 {
    //                     HASP_Plate01_Page.sendCommand(plate01_pagebutton1page as Number)
    //                 }
    //                 case '2':
    //                 {
    //                     HASP_Plate01_Page.sendCommand(plate01_pagebutton2page as Number)
    //                 }
    //                 case '3':
    //                 {
    //                     HASP_Plate01_Page.sendCommand(plate01_pagebutton3page as Number)
    //                 }
    //             }               
    //             HASP_Plate01_Light_Power.sendCommand(ON) //refresh backlight timer following button press
    //         }
    //         else
    //         {
    //             switch(eventpage)
    //             {
    //                 case '0': // Page 0
    //                 {
    //                     /*
    //                         Act on buttons from Page 0 here
    //                     */
    //                     if (eventbutton == '1')
    //                         {
    //                         //Insert action to perform if button 0 was pressed
                    
    //                         HASP_Plate01_Page.sendCommand(1 as Number)                         //This is only for when the HASP starts in page 0 and you need to go to a different page, this will send it to Page 1
    //                         }
    //                 }
    //                 case '1': // Page 1
    //                 {
    //                     /*
    //                         Act on buttons from Page 1 here
    //                     */
    //                     if (eventbutton == '4')
    //                         {
    //                         if(TopTVLight.state == ON)                                    //Example - Toggle - change item state using HASP button (turn OFF if ON and ON if OFF)
    //                             {
    //                             TopTVLight.sendCommand(OFF)
    //                             }
    //                         else
    //                             {
    //                             TopTVLight.sendCommand(ON)
    //                             }
    //                         }
    //                     else if (eventbutton == '5')
    //                         {
    //                         if(TableLight.state == ON)                                    //Example - Toggle - change item state using HASP button (turn OFF if ON and ON if OFF)
    //                             {
    //                             TableLight.sendCommand(OFF)
    //                             }
    //                         else
    //                             {
    //                             TableLight.sendCommand(ON)
    //                             }
    //                         }
    //                     else if (eventbutton == '6')
    //                         {
    //                         if(KitchenLedLight.state == ON)                                    //Example - Toggle - change item state using HASP button (turn OFF if ON and ON if OFF)
    //                             {
    //                             KitchenLedLight.sendCommand(OFF)
    //                             }
    //                         else
    //                             {
    //                             KitchenLedLight.sendCommand(ON)
    //                             }
    //                     }
    //                     else if (eventbutton == '7')
    //                         {
    //                         if(HallwayLight.state == ON)                                    //Example - Toggle - change item state using HASP button (turn OFF if ON and ON if OFF)
    //                             {
    //                             HallwayLight.sendCommand(OFF)
    //                             }
    //                         else
    //                             {
    //                             HallwayLight.sendCommand(ON)
    //                             }
    //                         }
    //                     else if (eventbutton == '8')
    //                         {
    //                         if(BedsideLight.state == ON)                                    //Example - Toggle - change item state using HASP button (turn OFF if ON and ON if OFF)
    //                             {
    //                             BedsideLight.sendCommand(OFF)
    //                             }
    //                         else
    //                             {
    //                             BedsideLight.sendCommand(ON)
    //                             }
    //                         }
    //                     else if (eventbutton == '9')
    //                         {
    //                         }
    //                     else if (eventbutton == '10')
    //                         {
    //                         }
    //                     else if (eventbutton == '11')
    //                         {
    //                         //Insert action to perform if dimmer 11 was moved
    //                         SancaLed.sendCommand(HASP_Plate01_Plate_State_JSON_Value.state.toString)
    //                         HASP_Plate01_Light_Power.sendCommand(ON) //refresh backlight timer following button press    
    //                         }
    //                     else if (eventbutton == '12')
    //                         {
    //                         }
    //                     else if (eventbutton == '13')
    //                         {
    //                         //Insert action to perform if dimmer 13 was moved
    //                         if (HASP_Plate01_Plate_State_JSON_Value.state != 'ON'){
    //                             HASP_Plate01_Light_Dimmer.sendCommand(HASP_Plate01_Plate_State_JSON_Value.state.toString) //Example - send dimmer value to HASP Backlight item
    //                             }
    //                         }
    //                     HASP_Plate01_Light_Power.sendCommand(ON) //refresh backlight timer following button press    
    //                 }
    //                 case '2': // Page 2
    //                 {
    //                     // Getting the temperatures and storing it to variables
    //                     var Number kTemp = KomecoTemp.state as DecimalType
    //                     var Number aTemp = AirmaxTemp.state as DecimalType
    //                     var Number cTemp = CadenceTemp.state as DecimalType

    //                     /*
    //                         Act on buttons/dimmers from Page 2 here
    //                     */
    //                     if (eventbutton == '4')
    //                         {
    //                         }
    //                     else if (eventbutton == '5')
    //                         {
    //                         if(kTemp > 16)
    //                             {
    //                             KomecoTemp.sendCommand(kTemp - 1)
    //                             }
    //                         }
    //                     else if (eventbutton == '6')
    //                         {
    //                             // Nothing to be done here. It is just a display for the value.
    //                         }
    //                     else if (eventbutton == '7')
    //                         {
    //                         if(KomecoSw.state == ON)                                    //Example - Toggle - change item state using HASP button (turn OFF if ON and ON if OFF)
    //                             {
    //                             KomecoSw.sendCommand(OFF)
    //                             }
    //                         else
    //                             {
    //                             KomecoSw.sendCommand(ON)
    //                             }
    //                         }
    //                     else if (eventbutton == '8')
    //                         {
    //                         if(kTemp < 32)
    //                             {
    //                             KomecoTemp.sendCommand(kTemp + 1)
    //                             }
    //                         }
    //                     else if (eventbutton == '9')
    //                         {
    //                         }
    //                     else if (eventbutton == '10')
    //                         {
    //                         if(aTemp > 16)
    //                             {
    //                             AirmaxTemp.sendCommand(aTemp - 1)
    //                             }
    //                         }
    //                     else if (eventbutton == '11')
    //                         {
    //                         }
    //                     else if (eventbutton == '12')
    //                         {
    //                         if(AirmaxSw.state == ON)                                    //Example - Toggle - change item state using HASP button (turn OFF if ON and ON if OFF)
    //                             {
    //                             AirmaxSw.sendCommand(OFF)
    //                             }
    //                         else
    //                             {
    //                             AirmaxSw.sendCommand(ON)
    //                             }
    //                         }
    //                     else if (eventbutton == '13')
    //                         {
    //                         if(aTemp < 32)
    //                             {
    //                             AirmaxTemp.sendCommand(aTemp + 1)
    //                             }
    //                         }
    //                     else if (eventbutton == '14')
    //                         {
    //                         }
    //                     else if (eventbutton == '15')
    //                         {
    //                         if(cTemp > 30)
    //                             {
    //                             CadenceTemp.sendCommand(cTemp - 1)
    //                             }
    //                         }
    //                     else if (eventbutton == '16')
    //                         {
    //                         }
    //                     else if (eventbutton == '17')
    //                         {
    //                         if(CadenceSw.state == ON)                                    //Example - Toggle - change item state using HASP button (turn OFF if ON and ON if OFF)
    //                             {
    //                             CadenceSw.sendCommand(OFF)
    //                             }
    //                         else
    //                             {
    //                             CadenceSw.sendCommand(ON)
    //                             }
    //                         }
    //                     else if (eventbutton == '18')
    //                         {
    //                         if(cTemp < 50)
    //                             {
    //                             CadenceTemp.sendCommand(cTemp + 1)
    //                             }
    //                         }
    //                     else if (eventbutton == '19')
    //                         {
    //                             AirmaxMode.sendCommand("cool")
    //                             KomecoMode.sendCommand("cool")
    //                         }
    //                     else if (eventbutton == '20')
    //                         {
    //                             AirmaxMode.sendCommand("heat")
    //                             KomecoMode.sendCommand("heat")
    //                         }
    //                     HASP_Plate01_Light_Power.sendCommand(ON) //refresh backlight timer following button press    
    //                 }
    //                 case '3':
    //                 {
    //                     /*
    //                         Act on buttons from Page 3 here
    //                     */
    //                     if (eventbutton == '4')
    //                         {
    //                             sendCommand(SancaLed, "10")
    //                         }
    //                     else if (eventbutton == '5')
    //                         {
    //                             sendCommand(SancaLed, "100")
    //                         }
    //                     else if (eventbutton == '6')
    //                         {
    //                             sendCommand(HallwayLight, OFF)
    //                             sendCommand(KitchenLedLight, OFF)
    //                             sendCommand(TopTVLight, OFF)
    //                             sendCommand(TableLight, OFF)
    //                             sendCommand(BedsideLight, OFF)
    //                             sendCommand(SancaColor, OFF)
    //                             sendCommand(SancaLed, OFF)
    //                             //sendCommand(BedroomColor, OFF)
    //                         }
    //                     else if (eventbutton == '7')
    //                         {
    //                             sendCommand(HallwayLight, ON)
    //                             sendCommand(KitchenLedLight, ON)
    //                             sendCommand(SancaLed, "10")
    //                             sendCommand(SancaColor, OFF)
    //                         }
    //                     else if (eventbutton == '8')
    //                         {
    //                         }
    //                     else if (eventbutton == '9')
    //                         {
    //                             sendCommand(MovieLights, ON)
    //                         }
    //                     else if (eventbutton == '10')
    //                         {
    //                             sendCommand(AutoMorningClimate, OFF)
    //                             sendCommand(AutoBedTimeBlanket, OFF)
    //                             sendCommand(AutoMorningLights, OFF)  
    //                             sendCommand(AutoNightLights, OFF)  
    //                             sendCommand(MovementLights, OFF)  
    //                         }
    //                     else if (eventbutton == '11')
    //                         {
    //                             sendCommand(AutoMorningClimate, ON)
    //                             sendCommand(AutoBedTimeBlanket, ON)
    //                             sendCommand(AutoMorningLights, ON)  
    //                             sendCommand(AutoNightLights, ON)  
    //                             sendCommand(MovementLights, ON)  
    //                         }
    //                     else if (eventbutton == '12')
    //                         {
    //                             sendCommand(BothACs, ON)  
    //                         }
    //                     else if (eventbutton == '13')
    //                         {
    //                             sendCommand(BothBlankets, ON)
    //                         }
    //                     else if (eventbutton == '14')
    //                         {
    //                             sendCommand(TV, ON)  
    //                             sendCommand(Receiver, ON)  
    //                         }
    //                     else if (eventbutton == '15')
    //                         {
    //                             sendCommand(TV, OFF)  
    //                             sendCommand(Receiver, OFF)  
    //                         }
    //                     HASP_Plate01_Light_Power.sendCommand(ON) //refresh backlight timer following button press                    
    //                 }
    //                 case '4':
    //                 {
    //                     /*
    //                         Act on buttons from Page 4 here
    //                     */
    //                     if (eventbutton == '4')
    //                     {
    //                         //Insert action to perform if button 4 was pressed
    //                     }
    //                     else if (eventbutton == '5')
    //                     {
    //                         //Insert action to perform if button 5 was pressed
    //                     }
    //                     else if (eventbutton == '6')
    //                     {
    //                         //Insert action to perform if button 6 was pressed
    //                     }
    //                     else if (eventbutton == '7')
    //                     {
    //                         //Insert action to perform if button 7 was pressed
    //                     }        
    //                     HASP_Plate01_Light_Power.sendCommand(ON) //refresh backlight timer following button press
    //                 }
    //                 case '5':
    //                 {
    //                     /*
    //                         Act on buttons/dimmers from Page 4 here
    //                     */
    //                     if (eventbutton == '4')
    //                     {
    //                         //Insert action to perform if button 4 was pressed
    //                     }
    //                     else if (eventbutton == '5')
    //                     {
    //                         //Insert action to perform if button 5 was pressed
    //                     }
    //                     else if (eventbutton == '6')
    //                     {
    //                         //Insert action to perform if button 6 was pressed
    //                     }
    //                     else if (eventbutton == '7')
    //                     {
    //                         //Insert action to perform if dimmer 1 was moved
    //                     }
    //                     else if (eventbutton == '8')
    //                     {
    //                         //Insert action to perform if dimmer 2 was moved
    //                     }
    //                     else if (eventbutton == '9')
    //                     {
    //                         //Insert action to perform if dimmer 3 was moved
    //                     }
    //                     HASP_Plate01_Light_Power.sendCommand(ON) //refresh backlight timer following button press                    
    //                 }
    //             }
    //         }
    //     }
    }
end

// // openHAB -> HASP item handling rules

// /* 
// Use the rules below to modify the HASP display based on inputs from your openHAB system.

// A sample rule has been included to show you how to modify a dimmer value on Page 5, to make it match the actual position of the openHAB item
// (in this case, we're simply taking the input from Dimmer 1, which is tied to the HASP Backlight item in the HASP -> openHAB rules above, and 
// sending that value to Dimmer 2)

// You can also use these rules to display status information on one of the screens of the HASP (i.e. weather, system status, clock, etc..)

// Another great use for these rules would be for screen 9, which is built to show 3d printer status from Octoprint.

rule "Handle HASP LVGL Page Change"
when
    Item HASP_Plate35_Page_Current received update
then
    var String jsonString

    switch(HASP_Plate35_Page_Current.state)
    {
        case 0: //page 0
        {
            jsonString = '[\''+
                        'p[254].b[1].val=1\',\'' +
                        'p[254].b[2].val=0\',\'' +
                        'p[254].b[3].val=2'      +
                    '\']'
        }
        case 1: //page 1
        {
            jsonString = '[\''+
                        'p[1].b[1].txt=\\uf1eb  ' + HASP_Plate35_Plate_Sensor_SignalStrength.state.toString + '   ' + HASP_Plate35_Plate_Sensor_HaspIP.state + '\',\'' +
                        'p[254].b[1].val=0\',\'' +
                        'p[254].b[2].val=1\',\'' +
                        'p[254].b[3].val=2'      +
                    '\']'
        }
        case 2: //page 2
        {
            jsonString = '[\''+
                        'p[254].b[1].val=0\',\'' +
                        'p[254].b[2].val=0\',\'' +
                        'p[254].b[3].val=1'      +
                    '\']'
        }
        default: //other pages
        {
            jsonString = '[\''+
                        'p[254].b[1].val=0\',\'' +
                        'p[254].b[2].val=0\',\'' +
                        'p[254].b[3].val=2'      +
                    '\']'
        }

    }
    HASP_Plate35_Plate_Command_JSON.sendCommand(jsonString)

end

// */

//      ____  _                                   
//     / __ \(_)___ ___  ____ ___  ___  __________
//    / / / / / __ `__ \/ __ `__ \/ _ \/ ___/ ___/
//   / /_/ / / / / / / / / / / / /  __/ /  (__  ) 
//  /_____/_/_/ /_/ /_/_/ /_/ /_/\___/_/  /____/  
//                                                

rule "Update HASP LVGL Page 1 dimmer"
when 
    Item HASP_Plate35_Light_Brightness received update
then
/* HASP LVGL reports every step of a slider object, we create a timer to delay the updates to the slider object */
    if (Brightness_Timer !== null) {
        Brightness_Timer.reschedule(now.plusSeconds(3))
        logWarn ("HASP_LVGL", "Reschedule TIMER")
    } else {
        logWarn ("HASP_LVGL", "CREATE TIMER")
        Brightness_Timer = createTimer(now.plusSeconds(2)) [ |
            var String jsonString = '["p[1].b[3].val=' + HASP_Plate35_Light_Brightness.state.toString + '"]'
            HASP_Plate35_Plate_Command_JSON.sendCommand(jsonString)    
            if(Brightness_Timer !== null){
                Brightness_Timer.cancel()
                Brightness_Timer = null
                logWarn ("HASP_LVGL", "CANCEL TIMER")
            }
        ]

    }

end

//     ________    _                 __     
//    / ____/ /   (_)___ ___  ____ _/ /____ 
//   / /   / /   / / __ `__ \/ __ `/ __/ _ \
//  / /___/ /___/ / / / / / / /_/ / /_/  __/
//  \____/_____/_/_/ /_/ /_/\__,_/\__/\___/ 
//                                          

// rule "Handle HASP Master Page 2 Komeco status display"
// when
//     Item KomecoSw received update or
//     Item HASP_Plate01_Page_Current received update
// then
//     var String jsonString
//     if(KomecoSw.state == ON)                                    //Example - Toggle - change item state using HASP button (turn OFF if ON and ON if OFF)
//         {
//         jsonString = '["p[2].b[21].picc=4"]'
//         }
//     else
//         {
//         jsonString = '["p[2].b[21].picc=3"]' 
//         }
//     HASP_Plate01_Plate_Command_JSON.sendCommand(jsonString)    
// end

// rule "Handle HASP Master Page 2 Komeco temperature display"
// when
//     Item KomecoTemp received update
// then
//     var String jsonString = '["p[2].b[6].txt=\\"' +  KomecoTemp.state.format("%d°C") + '\\""]'
//     HASP_Plate01_Plate_Command_JSON.sendCommand(jsonString)    
// end

// rule "Handle HASP Master Page 2 Airmax status display"
// when
//     Item AirmaxSw received update or
//     Item HASP_Plate01_Page_Current received update
// then
//     var String jsonString
//     if(AirmaxSw.state == ON)                                    //Example - Toggle - change item state using HASP button (turn OFF if ON and ON if OFF)
//         {
//         jsonString = '["p[2].b[22].picc=4"]'
//         }
//     else
//         {
//         jsonString = '["p[2].b[22].picc=3"]' 
//         }
//     HASP_Plate01_Plate_Command_JSON.sendCommand(jsonString)    
// end

// rule "Handle HASP Master Page 2 Airmax temperature display"
// when
//     Item AirmaxTemp received update
// then
//     var String jsonString = '["p[2].b[11].txt=\\"' +  AirmaxTemp.state.format("%d°C") + '\\""]'
//     HASP_Plate01_Plate_Command_JSON.sendCommand(jsonString)    
// end

// rule "Handle HASP Master Page 2 Cadence status display"
// when
//     Item CadenceSw received update or
//     Item HASP_Plate01_Page_Current received update
// then
//     var String jsonString
//     if(CadenceSw.state == ON)                                    //Example - Toggle - change item state using HASP button (turn OFF if ON and ON if OFF)
//         {
//         jsonString = '["p[2].b[23].picc=4"]'
//         }
//     else
//         {
//         jsonString = '["p[2].b[23].picc=3"]' 
//         }
//     HASP_Plate01_Plate_Command_JSON.sendCommand(jsonString)    
// end

// rule "Handle HASP Master Page 2 Cadence temperature display"
// when
//     Item CadenceTemp received update
// then
//     var String jsonString = '["p[2].b[16].txt=\\"' +  CadenceTemp.state.format("%d°C") + '\\""]'
//     HASP_Plate01_Plate_Command_JSON.sendCommand(jsonString)    
// end


// /* -------------------------------------- END USER-DEFINED HANDLER RULES -------------------------------------- */

// // /* Restore saved page and rebuild config on reconnect */
// rule "HASP Master Restore page on connect"
// when
//     Item HASP_Plate01_Plate_Status changed to "ON" or
//     Item HASP_Plate01_Plate_Refresh received command ON
// then
  
//     HASP_Plate01_Page.sendCommand(HASP_Plate01_Page_Current.state as Number) // Send HASP to previous page

//     var String jsonString = '["p[1].b[1].pco=65535", ' +   //Initialize bottom page buttons with gray color
//                     '"p[1].b[2].pco=65535", ' +
//                     '"p[1].b[3].pco=65535", ' +
//                     '"p[2].b[1].pco=65535", ' +
//                     '"p[2].b[2].pco=65535", ' +
//                     '"p[2].b[3].pco=65535", ' +
//                     '"p[3].b[1].pco=65535", ' +
//                     '"p[3].b[2].pco=65535", ' +
//                     '"p[3].b[3].pco=65535", ' +
//                     '"p[4].b[1].pco=65535", ' +
//                     '"p[4].b[2].pco=65535", ' +
//                     '"p[4].b[3].pco=65535", ' +
//                     '"p[5].b[1].pco=65535", ' +
//                     '"p[5].b[2].pco=65535", ' +
//                     '"p[5].b[3].pco=65535", ' +
//                     '"p[1].b[1].txt=\\"' + plate01_pagebutton1txt + '\\"", ' +  //Initialize bottom page button text
//                     '"p[1].b[2].txt=\\"' + plate01_pagebutton2txt + '\\"", ' +
//                     '"p[1].b[3].txt=\\"' + plate01_pagebutton3txt + '\\"", ' +
//                     '"p[2].b[1].txt=\\"' + plate01_pagebutton1txt + '\\"", ' +
//                     '"p[2].b[2].txt=\\"' + plate01_pagebutton2txt + '\\"", ' +
//                     '"p[2].b[3].txt=\\"' + plate01_pagebutton3txt + '\\"", ' +
//                     '"p[3].b[1].txt=\\"' + plate01_pagebutton1txt + '\\"", ' +
//                     '"p[3].b[2].txt=\\"' + plate01_pagebutton2txt + '\\"", ' +
//                     '"p[3].b[3].txt=\\"' + plate01_pagebutton3txt + '\\"", ' +
//                     '"p[4].b[1].txt=\\"' + plate01_pagebutton1txt + '\\"", ' +
//                     '"p[4].b[2].txt=\\"' + plate01_pagebutton2txt + '\\"", ' +
//                     '"p[4].b[3].txt=\\"' + plate01_pagebutton3txt + '\\"", ' +
//                     '"p[5].b[1].txt=\\"' + plate01_pagebutton1txt + '\\"", ' +
//                     '"p[5].b[2].txt=\\"' + plate01_pagebutton2txt + '\\"", ' +
//                     '"p[5].b[3].txt=\\"' + plate01_pagebutton3txt + '\\""]'                  

//     HASP_Plate01_Plate_Command_JSON.sendCommand(jsonString)

//     jsonString = '["p[1].b[4].txt=\\"' + plate01_page1button4txt + '\\"", ' +    // Update button texts for all pages
//                      '"p[1].b[5].txt=\\"' + plate01_page1button5txt + '\\"", ' +
//                      '"p[1].b[6].txt=\\"' + plate01_page1button6txt + '\\"", ' +
//                      '"p[1].b[7].txt=\\"' + plate01_page1button7txt + '\\"", ' +
//                      '"p[1].b[8].txt=\\"' + plate01_page1button8txt + '\\"", ' +
//                      '"p[1].b[9].txt=\\"' + plate01_page1button9txt + '\\"", ' +
//                      '"p[1].b[10].txt=\\"' + plate01_page1button10txt + '\\"", ' +
//                      '"p[1].b[11].txt=\\"' + plate01_page1button11txt + '\\"", ' +
//                      '"p[1].b[12].txt=\\"' + plate01_page1button12txt + '\\"", ' +
//                      '"p[1].b[13].txt=\\"' + plate01_page1button13txt + '\\"", ' +
//                      '"p[2].b[4].txt=\\"' + plate01_page2button4txt + '\\"", ' +
//                      '"p[2].b[5].txt=\\"' + plate01_page2button5txt + '\\"", ' +
//                      '"p[2].b[6].txt=\\"' + plate01_page2button6txt + '\\"", '  +
//                      '"p[2].b[7].txt=\\"' + plate01_page2button7txt + '\\"", ' +
//                      '"p[2].b[8].txt=\\"' + plate01_page2button8txt + '\\"", ' +
//                      '"p[2].b[9].txt=\\"' + plate01_page2button9txt + '\\"", ' +
//                      '"p[2].b[10].txt=\\"' + plate01_page2button10txt + '\\"", ' +
//                      '"p[2].b[11].txt=\\"' + plate01_page2button11txt  + '\\"", '  +
//                      '"p[2].b[12].txt=\\"' + plate01_page2button12txt + '\\"", ' +
//                      '"p[2].b[13].txt=\\"' + plate01_page2button13txt + '\\"", ' +
//                      '"p[2].b[14].txt=\\"' + plate01_page2button14txt + '\\"", ' +
//                      '"p[2].b[15].txt=\\"' + plate01_page2button15txt + '\\"", ' +
//                      '"p[2].b[16].txt=\\"' + plate01_page2button16txt  + '\\"", '  +
//                      '"p[2].b[17].txt=\\"' + plate01_page2button17txt + '\\"", ' +
//                      '"p[2].b[18].txt=\\"' + plate01_page2button18txt + '\\"", ' +
//                      '"p[2].b[19].txt=\\"' + plate01_page2button19txt + '\\"", ' +
//                      '"p[2].b[20].txt=\\"' + plate01_page2button20txt + '\\"", ' +
//                      '"p[3].b[4].txt=\\"' + plate01_page3button4txt + '\\"", ' +
//                      '"p[3].b[5].txt=\\"' + plate01_page3button5txt + '\\"", ' +
//                      '"p[3].b[6].txt=\\"' + plate01_page3button6txt + '\\"", ' +
//                      '"p[3].b[7].txt=\\"' + plate01_page3button7txt + '\\"", ' +                                                                                                                                                   
//                      '"p[3].b[8].txt=\\"' + plate01_page3button8txt + '\\"", ' +                                                                                                                                                   
//                      '"p[3].b[9].txt=\\"' + plate01_page3button9txt + '\\"", ' +                                                                                                                                                   
//                      '"p[3].b[10].txt=\\"' + plate01_page3button10txt + '\\"", ' +                                                                                                                                                   
//                      '"p[3].b[11].txt=\\"' + plate01_page3button11txt + '\\"", ' +                                                                                                                                                   
//                      '"p[3].b[12].txt=\\"' + plate01_page3button12txt + '\\"", ' +                                                                                                                                                   
//                      '"p[3].b[13].txt=\\"' + plate01_page3button13txt + '\\"", ' +                                                                                                                                                   
//                      '"p[3].b[14].txt=\\"' + plate01_page3button14txt + '\\"", ' +                                                                                                                                                   
//                      '"p[3].b[15].txt=\\"' + plate01_page3button15txt + '\\""]'

//     HASP_Plate01_Plate_Command_JSON.sendCommand(jsonString)

//     jsonString = '["p[1].b[4].font=' + plate01_page1button4font + '", ' +    // Update font sizes for all pages
//                      '"p[1].b[5].font=' + plate01_page1button5font + '", ' +
//                      '"p[1].b[6].font=' + plate01_page1button6font + '", ' +
//                      '"p[1].b[7].font=' + plate01_page1button7font + '", ' +
//                      '"p[1].b[8].font=' + plate01_page1button8font + '", ' +
//                      '"p[1].b[9].font=' + plate01_page1button9font + '", ' +
//                      '"p[1].b[10].font=' + plate01_page1button10font + '", ' +
//                      '"p[1].b[11].font=' + plate01_page1button11font + '", ' +
//                      '"p[1].b[12].font=' + plate01_page1button12font + '", ' +
//                      '"p[1].b[13].font=' + plate01_page1button13font + '", ' +
//                      '"p[2].b[4].font=' + plate01_page2button4font + '", ' +
//                      '"p[2].b[5].font=' + plate01_page2button5font + '", ' +
//                      '"p[2].b[6].font=' + plate01_page2button6font + '", ' +
//                      '"p[2].b[7].font=' + plate01_page2button7font + '", ' +
//                      '"p[2].b[8].font=' + plate01_page2button8font + '", ' +
//                      '"p[2].b[9].font=' + plate01_page2button9font + '", ' +
//                      '"p[2].b[10].font=' + plate01_page2button10font + '", ' +
//                      '"p[2].b[11].font=' + plate01_page2button11font + '", ' +
//                      '"p[2].b[12].font=' + plate01_page2button12font + '", ' +
//                      '"p[2].b[13].font=' + plate01_page2button13font + '", ' +
//                      '"p[2].b[14].font=' + plate01_page2button14font + '", ' +
//                      '"p[2].b[15].font=' + plate01_page2button15font + '", ' +
//                      '"p[2].b[16].font=' + plate01_page2button16font + '", ' +
//                      '"p[2].b[17].font=' + plate01_page2button17font + '", ' +
//                      '"p[2].b[18].font=' + plate01_page2button18font + '", ' +
//                      '"p[2].b[19].font=' + plate01_page2button19font + '", ' +
//                      '"p[2].b[20].font=' + plate01_page2button20font + '", ' +
//                      '"p[3].b[4].font=' + plate01_page3button4font + '", ' +
//                      '"p[3].b[5].font=' + plate01_page3button5font + '", ' +
//                      '"p[3].b[6].font=' + plate01_page3button6font + '", ' +
//                      '"p[3].b[7].font=' + plate01_page3button7font + '", ' +                                                                                                                                                   
//                      '"p[3].b[8].font=' + plate01_page3button8font + '", ' +                                                                                                                                                   
//                      '"p[3].b[9].font=' + plate01_page3button9font + '", ' +                                                                                                                                                   
//                      '"p[3].b[10].font=' + plate01_page3button10font + '", ' +                                                                                                                                                   
//                      '"p[3].b[11].font=' + plate01_page3button11font + '", ' +                                                                                                                                                   
//                      '"p[3].b[12].font=' + plate01_page3button12font + '", ' +                                                                                                                                                   
//                      '"p[3].b[13].font=' + plate01_page3button13font + '", ' +                                                                                                                                                   
//                      '"p[3].b[14].font=' + plate01_page3button14font + '", ' +                                                                                                                                                   
//                      '"p[3].b[15].font=' + plate01_page3button15font + '"]'

//     HASP_Plate01_Plate_Command_JSON.sendCommand(jsonString)
   
// end

// /* Set page button images based on current page */
// rule "HASP Master set page button images on page change"
// when
//     Item HASP_Plate01_Page_Current received update 
// then
//     if (HASP_Plate01_Page_Current.state != 0)
//     {
//         var String jsonString = '["p['+ (HASP_Plate01_Page_Current.state.toString) + '].b[1].picc=0", ' +
//                             '"p['+ (HASP_Plate01_Page_Current.state.toString) + '].b[2].picc=0", ' +
//                             '"p['+ (HASP_Plate01_Page_Current.state.toString) + '].b[3].picc=0"'

//         if (HASP_Plate01_Page_Current.state == plate01_pagebutton1page)
//         {
//                 jsonString = jsonString + ', "p['+ (HASP_Plate01_Page_Current.state.toString) + '].b[1].picc=2"]'
//         }
//         else if (HASP_Plate01_Page_Current.state == plate01_pagebutton2page)
//         {
//                 jsonString = jsonString + ', "p['+ (HASP_Plate01_Page_Current.state.toString) + '].b[2].picc=2"]'
//         }
//         else if (HASP_Plate01_Page_Current.state == plate01_pagebutton3page)
//         {
//                 jsonString = jsonString + ', "p['+ (HASP_Plate01_Page_Current.state.toString) + '].b[3].picc=2"]'
//         }
//         else 
//         {
//                 jsonString = jsonString + ']'
//         }

//         HASP_Plate01_Plate_Command_JSON.sendCommand(jsonString)
//     }
// end